## =================================================================================
[datasource]
root_path       = /opt/users/jmz/2_input_NOSTRADAMUS_ANN/
#root_path      = /data/COALITION2/PicturesSatellite/results_JMZ/2_input_NOSTRADAMUS_ANN/
output_path     = /data/COALITION2/PicturesSatellite/results_JMZ/2_input_NOSTRADAMUS_ANN/ctrl_output/
UV_precalc_path = /data/COALITION2/PicturesSatellite/results_JMZ/2_input_NOSTRADAMUS_ANN/UV_precalc/
RZC_path        = /data/COALITION2/database/radar/ccs4/RZC/
## =================================================================================

## =================================================================================
[basicsetting]
## Print status within loops:
verbose             = True
## Time step between input datasets in minutes:
timestep            = 5
## Number of time steps which should be displaced to current time step t0:
n_integ             = 10
#84
## How many additional frames should be used for calculating the derivation
## of the motion field:
n_past_frames       = 4
## Return list of intermediate UV-vectors (original and sparsenned):
UV_inter            = False
## ccs4 xy_ext: 
xy_ext_x      = 640
xy_ext_y      = 710
## Threshold to restrict optical flow input data_
R_thresh_meth = perc
R_threshold   = 99
## R threshold method (R_thresh_meth):
## - fix:  fixed threshold in mm/h   
## - perc: percentile treshold in %
## Do residual displacement:
## If 'None' no residual displacement,
## if 'Onestep' add ini and resid displacement fields and displace orig
## if 'Twostep' displace orig and disp seperately.
## Use precalculated XYW array in displacement of arrays.
use_precalc_XYW     = True

## Method stating how residual movement should be corrected for:
instant_resid_corr  = True
resid_method        = Onestep
# Onestep
#resid_disp          = None
#resid_disp_onestep  = True
n_past_frames_resid = 3
R_thresh_meth_resid = perc
R_threshold_resid   = 99.5
decl_grid_resid     = 20
inter_fun_resid     = gaussian
epsilon_resid       = 15
zero_interpol       = True

## Use TRT cell centers which are displaced
## backwards against the flow:
displ_TRT_cellcent  = True

## Preparation of training dataset:
generating_train_ds = True
precalc_UV_disparr  = True
future_disp_reverse = True

## =================================================================================

## =================================================================================
[statistics_calculation]
## Shape of the form selecting the data:
## (Possible shapes are 'square' and 'circle')
stat_sel_form       = circle

## Spatial extent of the form in km (integer):
## (if form='square' -> edge length
##  if form='circle' -> diameter)
stat_sel_form_width = 16
## Minimum TRT rank to be included in training dataset:
min_TRT_rank        = 1.0
## Save TRT domains on map (not just indices of selected pixel):
save_TRT_domain_map = True
save_stat_ctrl_imag = True

## =================================================================================
[verification]
verify_disp = False
verif_param = resid_method
#R_threshold
scores_list = csi,hk,sedi
## Corresponding to
## - Critical Success Index
## - Hanssen-Kuipers Discriminant
## - Symmetric Extremal Dependence Index
n_stat      = 5
## Number of statistics to write out per variable:
## - Min
## - Max
## - Mean
## - 90% quantile
## - Number of Pixels
## =================================================================================

## =================================================================================
[file_handling]
save_type   = nc
## Type of saved files (save_type):
## - nc:  NetCDF4 Classic format   
## - npy: Native Numpy format
delete_prec    = True
## =================================================================================

## =================================================================================
[variables]
var_list    = RZC,TWATER,CAPE_MU,CAPE_ML,CIN_MU,CIN_ML,SLI,BZC,LZC,MZC,EZC,EZC15,EZC45,HRV,VIS006,VIS008,IR_108,IR_120,WV_062,THX
# RZC,BZC,LZC,MZC,EZC,EZC15,EZC45,HRV,VIS006,VIS008,IR_108,IR_120,WV_062,THX
## Not included:  Wind,Conv
#conv_vars   = TWATER,CAPE_MU,CAPE_ML,CIN_MU,CIN_ML,SLI
## Corresponding to
## - Rain rate
## - POH
## - VIL
## - Maximum expected severe hail size (MESHS)
## - ECHO TOP (for 15, 20, 45, and 50 dBZ filename extension 815, 820, 845, and 850)
##-----------------------------------------------------
## - Lightning density
##-----------------------------------------------------
## - Atmosphere water content
## - CAPE/CIN of most unstable parcel
## - CAPE/CIN of mean surface layer parcel
## - Surface lifted index
## - ... (See ncview <ncfile.nc>)
## =================================================================================

## =================================================================================
[radar_read]
path_fmt    = %Y/%j
fn_pattern  = %y%j%H%M?L
fn_ext      = 801
etop_EZC    = 45
RZC_path    = /data/COALITION2/database/radar/ccs4/RZC/
BZC_path    = /data/COALITION2/database/radar/ccs4/BZC/
LZC_path    = /data/COALITION2/database/radar/ccs4/LZC/
MZC_path    = /data/COALITION2/database/radar/ccs4/MZC/
EZC_path    = /data/COALITION2/database/radar/ccs4/EZC/
CZC_path    = /data/COALITION2/database/radar/ccs4/CZC/
HZT_path    = /data/COALITION2/database/radar/ccs4/HZT/

[light_read]
path_fmt    = 
fn_pattern  = THX%y%j0000
fn_ext      = nc
THX_path    = /data/COALITION2/database/THX
#fn_ext      = prd
#THX_path    = /data/lom/WOL/foudre/data/THX
unfold      = False
unfold_form = gauss
dx_unfold   = 10
#dt_unfold   = 10
## Possible unfolding forms:
## - square
## - circle
## - gauss
## - gaussgauss

[TRT_read]
path_fmt    = %Y/%j
fn_pattern  = CZC%y%j%H%M??
fn_ext      = trt
TRT_path    = /data/OWARNA/hau/database/radar/TRTC/

[wind_read]
path_fmt    = %Y/%m/%d
fn_pattern  = %Y%m%d
fn_ext      = nc
Wind_path   = /data/COALITION2/database/cosmo/wind/

[conv_read]
path_fmt    = %Y/%m/%d
fn_pattern  = %Y%m%d
fn_ext      = nc
Conv_path   = /data/COALITION2/database/cosmo/convection/
## Smoothing of convection fields:
smooth_conv = False
## Kernel width for Gaussian smoothing:
smooth_sig  = 5

[sat_read]
path_fmt    = %Y/%m/%d
fn_pattern  = MSG?_ccs4_%Y%m%d%H%M_rad_PLAX
fn_ext      = nc
SAT_path   = /data/COALITION2/database/meteosat/ccs4_PLAX/

[aux_data_read]
path_frequency_image = /data/COALITION2/database/radar/radar_frequency/fRZC.801.2017.n352.l005.ZH.flt.dat.apn.gif
path_frequency_scale = /data/COALITION2/database/radar/radar_frequency/RGB_datalevels256_frequency.txt 
path_altitude_map    = /data/COALITION2/database/topography/COSMO1topo_ccs4/COSMO1_topography_parameters.nc

